buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'


ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

ext.release_type = config.release_type
ext.mod_id = config.mod_id
ext.mod_name = config.mod_name
ext.package_root = config.package_root
ext.minecraft_version = config.minecraft_version
ext.forge_version = config.forge_version

if (project.hasProperty("release")) {
    project.release_type = "release"
}

version = minecraft_version + "-" + System.getenv("BUILD_NUMBER") + "-" + release_type
group= package_root + "." + mod_id // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = mod_id

minecraft {
    version = project.minecraft_version + "-" + project.forge_version
    runDir = "eclipse"

    replaceIn "common/reference/Reference.java"
    replace "@MOD_ID@", project.mod_id

    replaceIn "common/reference/Reference.java"
    replace "@MOD_NAME@", project.mod_name

    replaceIn "common/reference/Reference.java"
    replace "@MOD_VERSION@", project.version
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20141130"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "mod_id", project.mod_id
    inputs.property "mod_name", project.mod_name

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'mod_id':project.mod_id, 'mod_name':project.mod_name
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea {
    module { inheritOutputDirs = true }
}